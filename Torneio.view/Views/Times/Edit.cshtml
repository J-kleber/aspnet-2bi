@model Torneio.model.Times
@{
    ViewBag.Title = "Edit";
    string emblema = Model.Emblema;
}

@using (Html.BeginForm("Edit", "times", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Editar Time</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        <div class="row">
            <div class="col-md-8">
                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Sigla, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Sigla, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sigla, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-12 mt-3">
                @Html.LabelFor(model => model.Emblema, htmlAttributes: new { @class = "control-label" })
                <img width="80px" height="auto" src="~/@emblema" />
                <input type="file" name="Emblema" id="Emblema" /><br><br>
                @Html.ValidationMessageFor(model => model.Emblema, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-offset-2 col-md-12">
                <a class="btn btn-light" href="@Url.Action("Index")"><i class="fas fa-arrow-left"></i> Voltar</a> &nbsp;
                <button type="submit" class="btn btn-success"><i class="fas fa-save"></i> Salvar</button>
            </div>
        </div>
        <br />
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
